{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrids.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrids","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAmB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAgB,SAAAS,GAAI,OAAMP,GAAN,mBAAsBO,OAC1CN,EAAc,MAKd,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAtBiB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEDI,MAAOF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAaXM,GAbW,4CAAH,sDCCXO,EAAc,SAAC,GAAoB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAW,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEfd,mBAAS,CAC5BqB,KAAM,GACNa,SAAS,IAJyB,mBAElCC,EAFkC,KAE3BC,EAF2B,KAyBtC,OAjBAC,qBAAU,WACNxB,EAASC,GACRwB,MAAK,SAAAC,GACFC,YAAY,WACZJ,EAAS,CACLf,KAAKkB,EACLL,SAAS,MAEd,UAEJ,CAACpB,IAOGqB,EDtB2BM,CAAa3B,GAAhCa,EAHsB,EAG5BN,KAAca,EAHc,EAGdA,QAGvB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEnD,sBAAKgB,UAAU,8CAAf,UAEII,GAAW,mBAAGJ,UAAU,mCAAb,qBAGJH,EAAOJ,KAAK,SAACC,GAAD,OACT,cAAC,EAAD,eAEQA,GADFA,EAAIC,cElBnBiB,EAAe,WAAO,IAAD,EACE1C,mBAAS,CAAE,WADb,mBAC3B2C,EAD2B,KACf5C,EADe,KAI9B,OACI,qCAEA,oBAAI+B,UAAU,qCAAd,0BACA,cAAC,EAAD,CAAa/B,cAAgBA,IAC7B,uBAEA,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAECA,SAAUA,GADLA,Y,MCZxB8B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.842684a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    const [InputValue, setInputValue] = useState('')\r\n    const handleInputChange= (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n  \r\n    \r\n  \r\n    const handleSubmit = (e) => {   \r\n        e.preventDefault();\r\n        //console.log('submit hecho')\r\n       // setCategories( [...categories,'HunterXHunter'] )  No tengo acceso a categories\r\n       if ( InputValue.trim().length > 2) {\r\n        setCategories ( cats => [ InputValue , ...cats ]);\r\n        setInputValue('');\r\n       }\r\n      \r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n          <input \r\n            type=\"text\"\r\n            value={ InputValue }\r\n            onChange={handleInputChange}\r\n          /> \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n    export const getGifs = async(category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&api_key=Q90jdH0dLeS9UDAmdbtRXdjrBq8qF6t6&limit=10`\r\n        const resp= await fetch (url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n\r\n            }\r\n        })\r\n      //  console.log(gifs);\r\n        return( gifs );\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({  title, url}) => {\r\n   // console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","//import React, {useState, useEffect} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrids = ({category }) => {\r\n\r\n\r\n    const  { data: images, loading }= useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n\r\n        <div className=\"card-grid animate__animated animate__fadeIn\">\r\n          \r\n          { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            \r\n               {\r\n                   images.map ((img ) => (\r\n                      <GifGridItem  \r\n                      key={ img.id }\r\n                         { ...img } \r\n                      />\r\n                   ))\r\n               }\r\n            \r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n \r\n const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n   \r\n   \r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then(imgs => {\r\n            setTimeout( () => {\r\n            setState({\r\n                data:imgs,\r\n                loading: false\r\n            })\r\n        }, 500);\r\n        })\r\n    }, [category])\r\n\r\n   \r\n     \r\n    \r\n   \r\n\r\n    return state;  // { data: [], loading: true}\r\n\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrids } from './components/GifGrids';\r\n\r\nexport const GifExpertApp = () => {\r\nconst [categories, setCategories] = useState([ 'Futbol']);\r\n\r\n\r\n    return ( \r\n        <>\r\n       \r\n        <h2 className=\"animate__animated animate__flipInX\">GifExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <hr/>\r\n        \r\n        <ol>\r\n            {\r\n                categories.map(category => \r\n                  <GifGrids \r\n                   key={category}\r\n                   category={category} />\r\n                )\r\n            }\r\n        </ol>\r\n        </>\r\n     );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}